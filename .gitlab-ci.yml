image: docker:latest

stages:
  - build

.init_ssh: &init_ssh |
  eval $(ssh-agent -s)
  echo "$GITLAB_TO_CONNECT_SSH_KEY" | tr -d '\r' | ssh-add - > /dev/null
  mkdir -p ~/.ssh/authorized_keys
  chmod 700 ~/.ssh
  chmod 600 ~/.ssh/authorized_keys
  [[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

sync:
  stage: build
  image: alpine:latest
  rules:
    - when: manual
  before_script:
    - .init_ssh
  script:
    - apk add --no-cache git

    - git clone "https://oauth2:$CI_JOB_TOKEN@$CI_SERVER_HOST/$GITLAB_PROJECT_PATH.git"
    - cd repository

    - git remote add github https://github.com/tkowalski29/ai-jose-api-blueprint.git
    - git fetch github main
    - git checkout -b sync-github
    - git merge --no-ff github/main
    - git push -u origin sync-github
    - >
      curl --header "PRIVATE-TOKEN: $CI_JOB_TOKEN" -X POST "$CI_API_V4_URL/projects/$CI_PROJECT_ID/merge_requests" 
      -d "source_branch=sync-github" 
      -d "target_branch=main" 
      -d "title=Sync with GitHub: main"

docker:image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  rules:
    - if: $CI_COMMIT_TAG
      when: always
    - when: never
  before_script:
    - apk add openssh git curl
    - docker login registry.gitlab.com -u tkowalski@iseno.net -p "$DOCKER_TOKEN"
    - ls -all
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
  after_script:
    - docker logout registry.gitlab.com
    - echo $CI_COMMIT_TAG
